syntax = "proto3";

package inquiry;

option go_package = "github.com/romanzimoglyad/inquiry-backend/pb/inquiry;inquiry";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/descriptor.proto";

service Inquiry {
  // Ping
  rpc Ping (PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/ping"
    };
  };
  // Create lesson
  rpc CreateLesson (CreateLessonRequest) returns (CreateLessonResponse) {
    option (google.api.http) = {
      post: "/lesson/create"
      body: "*"
    };
  };
  // List Lessons
  rpc ListLessons (ListLessonsRequest) returns (ListLessonsResponse) {
    option (google.api.http) = {
      post: "/lesson/list"
      body: "*"
    };
  };
  // List Subjects
  rpc ListSubjects (Empty) returns (ListSubjectsResponse) {
    option (google.api.http) = {
      get: "/subject/list"
    };
  };

  rpc ListDictionary (ListDictionaryRequest) returns (ListDictionaryResponse) {
    option (google.api.http) = {
      post: "/dictionary/list"
      body: "*"
        };
  };
}

message ListDictionaryRequest{
  Type type = 1;

  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_SUBJECT = 1;
    TYPE_UNIT = 2;
    TYPE_CONCEPT = 3;
    TYPE_SKILL = 4;
  }
}

message Empty {
}

message ListSubjectsResponse {
  repeated IdName subjects = 1;
}
message ListDictionaryResponse {
  repeated IdName pairs = 1;
}
message IdName {
  int32 id = 1;
  string name = 2;
}

message ListLessonsRequest {
  int64 user_id = 1;
  Filter filter = 2;

  message Filter {
    int32 subject_id = 1;
    int32 unit_id = 2;
    int32 concept_id = 3;
    int32 skill_id = 4;
  }
}
message ListLessonsResponse{
  repeated Lesson lessons =1;
}

message CreateLessonRequest {
  string name = 1 [(validate.rules).string.min_len = 1];
  int32 unit_id = 2 [(validate.rules).int64.gt = 0];
  string text = 3;
  int32 duration = 4;
  int64 user_id = 5 [(validate.rules).int64.gt = 0];
  string description = 6;
  int32 grade_id = 7 [(validate.rules).int32.gt = 0];
  int32 subject_id = 8 [(validate.rules).int32.gt = 0];
  string image_id = 9;
  int32 concept_id = 10 [(validate.rules).int64.gt = 0];
  int32 skill_id = 11 [(validate.rules).int64.gt = 0];
}

message Lesson {
  int32 id = 1;
  IdName unit = 2;
  string name = 3;
  string text = 4;
  int32 duration = 5;
  int64 user_id = 6;
  string description = 7;
  int32 grade_id = 8;
  IdName subject = 9;
  string created_at = 10;
  int64 image_id = 11;
  IdName concept = 12 ;
  IdName skill = 13;
}


message CreateLessonResponse {
  int32 id = 1;
}

message PingRequest {

}
message PingResponse {
  string status = 1;
}