syntax = "proto3";

package inquiry;

option go_package = "github.com/romanzimoglyad/inquiry-backend/pb/inquiry;inquiry";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/descriptor.proto";

service Inquiry {
  // Ping
  rpc Ping (PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/ping"
    };
  };
  // Create lesson
  rpc CreateLesson (LessonRequest) returns (CreateLessonResponse) {
    option (google.api.http) = {
      post: "/lesson/create"
      body: "*"
    };
  };

  // Update lesson
  rpc UpdateLesson (LessonRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/lesson/update"
      body: "*"
    };
  };
  // List Lessons
  rpc ListLessons (ListLessonsRequest) returns (ListLessonsResponse) {
    option (google.api.http) = {
      post: "/lesson/list"
      body: "*"
    };
  };
  // Get Lesson
  rpc GetLesson (GetLessonRequest) returns (GetLessonResponse) {
    option (google.api.http) = {
      post: "/lesson"
      body: "*"
    };
  };
  // Delete Lesson
  rpc DeleteLesson (GetLessonRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/lesson/delete"
      body: "*"
    };
  };
  // List Subjects
  rpc ListSubjects (Empty) returns (ListSubjectsResponse) {
    option (google.api.http) = {
      get: "/subject/list"
    };
  };

  rpc ListDictionary (ListDictionaryRequest) returns (ListDictionaryResponse) {
    option (google.api.http) = {
      post: "/dictionary/list"
      body: "*"
        };
  };
}


message GetLessonRequest {
  int32 user_id = 1;
  string id = 2;
}

message GetLessonResponse {
  Lesson lesson = 1;
}


message ListDictionaryRequest{
  DictionaryType type = 1;

}
enum DictionaryType {
  TYPE_UNKNOWN = 0;
  TYPE_SUBJECT = 1;
  TYPE_UNIT = 2;
  TYPE_CONCEPT = 3;
  TYPE_SKILL = 4;
  TYPE_GRADE = 5;
  TYPE_ALL = 6;
}

message Empty {
}

message ListSubjectsResponse {
  repeated IdName subjects = 1;
}
message ListDictionaryResponse {
 repeated Dictionary dictionaries =1;
}

message Dictionary {
  DictionaryType type = 1;
  repeated IdName pairs = 2;
}
message IdName {
  int32 id = 1;
  string name = 2;
}

message ListLessonsRequest {
  int32 user_id = 1;
  Filter filter = 2;
  Page page = 3;
  message Filter {
    int32 subject_id = 1;
    int32 unit_id = 2;
    int32 concept_id = 3;
    int32 skill_id = 4;
    int32 grade_id = 5;
    string search_text = 6;
  }
}

message Page {
  int32 page = 1;
  int32 size = 2;
}

message ListLessonsResponse{
  repeated Lesson lessons = 1;
  int32 count = 2;
}

message LessonRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
  string name = 2 [(validate.rules).string.min_len = 1];
  int32 unit_id = 3 [(validate.rules).int64.gt = 0];
  string text = 4;
  int32 duration = 5;
  int32 user_id = 6 [(validate.rules).int64.gt = 0];
  string description = 7;
  int32 grade_id = 8 [(validate.rules).int32.gt = 0];
  int32 subject_id = 9 [(validate.rules).int32.gt = 0];
  string image_id = 10;
  int32 concept_id = 11 [(validate.rules).int64.gt = 0];
  int32 skill_id = 12 [(validate.rules).int64.gt = 0];
  File image = 13;
  repeated File files = 14;
}

message File {
  string name = 1;
  string type = 2;
  bytes data = 3 ;
  string url = 4;
}

message Lesson {
  string id = 1;
  IdName unit = 2;
  string name = 3;
  string text = 4;
  int32 duration = 5;
  int32 user_id = 6;
  string description = 7;
  int32 grade_id = 8;
  IdName subject = 9;
  string created_at = 10;
  File image = 11;
  IdName concept = 12 ;
  IdName skill = 13;
  repeated File materials =14;
}


message CreateLessonResponse {
  string id = 1;
}

message PingRequest {

}
message PingResponse {
  string status = 1;
}